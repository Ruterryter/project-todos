import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { todos } from "../reducers/todos.js";
import moment from 'moment'
import { CustomCheckbox } from './CustomCheckbox';


export const TodoItem = ({ itemId, index }) => {
  const item = useSelector((store) => store.todos.list.items[index]);


  const dispatch = useDispatch();

  const handleCheckboxClick = (e) => {
    dispatch(todos.actions.setDone({
      itemId: itemId,
      done: !item.done,
    })
    );
  };

  const onRemoveClicked = (e) => {
    dispatch(
      todos.actions.removeTodo({
        itemId,
      })
    );
  };


  return (
    <div className={`todo-item ${item.done ? "done" : ""}`}>
      <CustomCheckbox
        isChecked={item.done ? "done" : ""}
        onChangeHandler={handleCheckboxClick}
      />
      <span className="todo-item-description"> {item.description} </span>
      <div className="created-at-time"> {moment(item.date).fromNow()}</div>
      <div className="todo-item-remove" onClick={onRemoveClicked}>
        <svg className="trash"
          xmlns="http://www.w3.org/2000/svg"
          width="22"
          height="22"
          version="1"
          viewBox="0 0 1280 1280"
        >
          <path
            d="M1320 12475v-325h10150v650H1320v-325zM1700 11665c0-3 30-242 66-531s64-528 62-529c-2-2-338 185-748 416-409 230-748 415-751 411-11-12-330-555-327-557 2-1 429-241 950-534s954-538 963-545c14-10 30-114 85-562 72-578 226-1816 435-3497 69-554 195-1566 279-2250 85-683 187-1504 227-1825l72-582h219c124 0 218 4 218 9 0 9-56 598-140 1466-22 231-63 653-90 938-28 284-72 751-100 1037-27 286-72 753-100 1038-27 284-68 706-90 937s-63 653-90 938c-28 284-72 751-100 1037-27 286-72 753-100 1038-27 284-70 729-95 987-25 259-59 616-76 795-16 179-32 335-35 348l-4 22h-365c-201 0-365-2-365-5zM3124 11618c4-29 15-172 26-318 21-287 102-1357 150-1985 16-214 52-688 80-1052 27-365 73-961 100-1325 28-365 64-838 80-1053 38-505 125-1645 150-1985 11-146 25-321 30-390 6-69 33-424 60-790 28-366 59-780 70-920 10-140 26-354 35-475s18-226 20-232c3-10 102-13 450-13h445l-6 58c-5 59-197 2750-544 7647-111 1562-204 2850-206 2863l-4 22h-941l5-52zM4974 11488c3-101 15-475 26-833 18-608 30-989 80-2625 11-355 29-944 40-1310s29-957 40-1315c11-357 24-794 30-970 5-176 19-619 30-985 46-1506 60-1965 66-2162l7-208h428c235 0 429 3 431 8 2 4-2 263-8 577-7 314-17 820-23 1125s-16 762-21 1015-14 687-20 965-15 721-20 985-14 705-20 980-15 716-20 980-14 705-20 980-15 716-20 980-14 705-20 980c-5 275-12 616-16 758l-6 257h-971l7-182zM6846 11568c-3-57-10-362-16-678s-15-782-20-1035c-10-493-22-1056-60-2940-6-275-15-716-20-980s-14-705-20-980-15-716-20-980-14-700-20-970c-5-269-14-717-20-995-5-278-12-601-16-718l-6-212h882v83c0 45 7 293 15 552s24 769 35 1135c37 1229 60 1963 70 2285 5 176 19 619 30 985s29 955 40 1310c71 2339 96 3151 110 3610 5 184 13 401 16 483l6 147h-980l-6-102zM8663 10652c-545-7643-673-9447-679-9504l-6-68h892l4 23c3 12 16 180 31 372 14 193 48 645 75 1005s72 954 100 1320c27 366 54 721 60 790s28 366 50 660 44 591 50 660 33 424 60 790 54 721 60 790 28 366 50 660 44 591 50 660c10 126 68 896 160 2113 27 364 51 681 53 705l5 42h-943l-72-1018zM10322 11223c-23-247-69-725-102-1063-77-795-217-2253-280-2912-131-1358-152-1581-190-1973-22-231-63-653-90-937-28-285-72-751-100-1035-27-285-65-684-85-888-20-203-56-578-80-832-25-254-45-471-45-482 0-21 5-21 215-21h214l6 33c3 17 37 286 75 597 66 535 121 985 345 2785 53 424 125 1004 160 1290s123 993 195 1570c72 578 169 1361 216 1740 47 380 88 693 92 696s439 248 967 544 961 539 963 540c5 4-328 560-336 560-4 0-342-188-750-418-409-231-745-417-746-415-1 1 26 228 60 503s64 515 66 533l4 32h-732l-42-447zM2670 325V0h7390v650H2670V325z"
            transform="matrix(.1 0 0 -.1 0 1280)"
          ></path>
        </svg>
      </div>
    </div>
  );
};